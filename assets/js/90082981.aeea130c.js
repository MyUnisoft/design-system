"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2138],{85372:(e,t,a)=>{a.d(t,{Z:()=>n});var l=a(67294);const n=e=>{let{children:t}=e;return l.createElement("div",{style:{background:"#FFF",minWidth:200,height:32}},t)}},38637:(e,t,a)=>{a.d(t,{Z:()=>n});var l=a(67294);const n=e=>{let{children:t}=e;return l.createElement("div",{style:{background:"#DDD",padding:20,display:"flex",justifyContent:"center",marginBottom:"1rem"}},t)}},72660:(e,t,a)=>{a.d(t,{Z:()=>o});var l=a(68666),n=a(30499),r=a(67294);const o=e=>{let{content:t}=e;const[a,o]=(0,r.useState)(!1);return r.createElement("div",null,r.createElement("div",{style:{display:"flex",justifyContent:"flex-end"}},r.createElement(l.Z,{onClick:()=>o((e=>!e))},"Toggle source")),r.createElement("div",{style:{display:a?"block":"none",maxHeight:500,overflow:"auto"}},r.createElement(n.Z1,{language:"jsx",text:t,showLineNumbers:!0,theme:n.BV,wrapLines:!0,codeBlock:!0})))}},78891:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>v,contentTitle:()=>N,default:()=>y,frontMatter:()=>C,metadata:()=>b,toc:()=>h});var l=a(87462),n=a(67294),r=a(3905),o=a(72660),i=a(98737),u=a(74949),p=a(85372),s=a(38637);const d=function(e){let{columnProps:t}=e;const[a,l]=(0,n.useState)("fr"),[r,o]=(0,n.useState)([{label:"Fran\xe7ais",value:"fr"},{label:"English",value:"en"},{label:"Deutsche",value:"de"}]);return n.createElement(s.Z,null,n.createElement(p.Z,null,n.createElement(i.Z,{typeCell:u.v.AUTOCOMPLETE,vtContext:{state:"PERMANENT_EDIT"},column:{options:r,onCreate:async e=>{const t=await prompt(`Set value for "${e}"`);t&&(o((a=>[...a,{label:e,value:t}])),l(t))},...t},data:{language:a},dataKey:"language",onChange:l})))};var m=a(44384),c=a(2750);const k=function(e){let{columnProps:t}=e;const[a,l]=(0,n.useState)(t?.multiple?["fr"]:"fr");return n.createElement(s.Z,null,n.createElement(m.ZP,{container:!0,justifyContent:"center",spacing:2},n.createElement(m.ZP,{item:!0},n.createElement(c.Z,{color:"textPrimary"},"Editable"),n.createElement(p.Z,null,n.createElement(i.Z,{typeCell:u.v.AUTOCOMPLETE,vtContext:{state:"PERMANENT_EDIT"},column:{options:[{label:"Fran\xe7ais",value:"fr"},{label:"English",value:"en"},{label:"Deutsche",value:"de"}],...t},data:{language:a},dataKey:"language",onChange:l}))),n.createElement(m.ZP,{item:!0},n.createElement(c.Z,{color:"textPrimary"},"Disabled"),n.createElement(p.Z,null,n.createElement(i.Z,{typeCell:u.v.AUTOCOMPLETE,vtContext:{state:"PERMANENT_EDIT"},column:{isDisabled:()=>!0,options:[{label:"Fran\xe7ais",value:"fr"},{label:"English",value:"en"},{label:"Deutsche",value:"de"}],...t},data:{language:a},dataKey:"language",onChange:l})))))};const g=function(e){let{columnProps:t={}}=e;const{multiple:a}=t;return n.createElement(s.Z,null,n.createElement(p.Z,null,n.createElement(i.Z,{typeCell:u.v.AUTOCOMPLETE,column:{multiple:a,options:[{label:"Fran\xe7ais",value:"fr"},{label:"English",value:"en"},{label:"Deutsche",value:"de"}]},data:{language:a?["fr","en"]:"fr"},dataKey:"language"})))},C={title:"Autocomplete"},N=void 0,b={unversionedId:"virtual-table/cells/autocomplete",id:"virtual-table/cells/autocomplete",title:"Autocomplete",description:"",source:"@site/docs/virtual-table/cells/autocomplete.mdx",sourceDirName:"virtual-table/cells",slug:"/virtual-table/cells/autocomplete",permalink:"/design-system/docs/virtual-table/cells/autocomplete",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/virtual-table/cells/autocomplete.mdx",tags:[],version:"current",frontMatter:{title:"Autocomplete"},sidebar:"tutorialSidebar",previous:{title:"Attachment",permalink:"/design-system/docs/virtual-table/cells/attachment"},next:{title:"Badge",permalink:"/design-system/docs/virtual-table/cells/badge"}},v={},h=[{value:"Basic",id:"basic",level:2},{value:"Creatable",id:"creatable",level:2},{value:"Clearable",id:"clearable",level:2},{value:"Multiple",id:"multiple",level:2},{value:"Read only",id:"read-only",level:2},{value:"Props",id:"props",level:2}],E={toc:h};function y(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,l.Z)({},E,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"basic"},"Basic"),(0,r.kt)(k,{mdxType:"CellAutocompleteEdit"}),(0,r.kt)("h2",{id:"creatable"},"Creatable"),(0,r.kt)("p",null,"It is possible to create a new options when there is no matching with the entered value."),(0,r.kt)("p",null,"To activate this feature, set the ",(0,r.kt)("inlineCode",{parentName:"p"},"canCreate")," props to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". The created value will then be passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"onCreate")," callback."),(0,r.kt)(d,{columnProps:{canCreate:!0},mdxType:"CellAutocompleteCreate"}),(0,r.kt)(o.Z,{content:"import React, { useState } from 'react';\r\nimport CellRender from '../../../../../../src/components/VirtualTable/cells';\r\nimport { TYPE_CELL } from '../../../../../../src/components/VirtualTable/constants/typeCell';\r\nimport Cell from '../Cell';\r\nimport Wrapper from '../Wrapper';\r\n\r\nfunction CellAutocompleteCreate({\r\n  columnProps\r\n}) {\r\n  const [state, setState] = useState('fr');\r\n  const [options, setOptions] = useState( [{\r\n    label: 'Fran\xe7ais',\r\n    value: 'fr'\r\n  },{\r\n    label: 'English',\r\n    value: 'en'\r\n  }, {\r\n    label: 'Deutsche',\r\n    value: 'de'\r\n  }]);\r\n\r\n  const handleCreate = async (label) => {\r\n    const value = await prompt(`Set value for \"${label}\"`);\r\n    if (value) {\r\n      setOptions((previous) => [\r\n        ...previous,\r\n        {\r\n          label,\r\n          value\r\n        }\r\n      ]);\r\n      setState(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n        <Cell>\r\n          <CellRender\r\n            typeCell={TYPE_CELL.AUTOCOMPLETE}\r\n            vtContext={{\r\n              state: 'PERMANENT_EDIT'\r\n            }}\r\n            column={{\r\n              options,\r\n              onCreate: handleCreate,\r\n              ...columnProps\r\n            }}\r\n            data={{ language: state }}\r\n            dataKey=\"language\"\r\n            onChange={setState}\r\n          />\r\n        </Cell>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CellAutocompleteCreate;",mdxType:"CodePreview"}),(0,r.kt)("h2",{id:"clearable"},"Clearable"),(0,r.kt)("p",null,"Give the possibility to empty the value by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"disableClearable")," props at ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)(k,{columnProps:{disableClearable:!1},mdxType:"CellAutocompleteEdit"}),(0,r.kt)("h2",{id:"multiple"},"Multiple"),(0,r.kt)("p",null,"Allow the user to select more than one value by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"multiple")," props at ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)(k,{columnProps:{multiple:!0},mdxType:"CellAutocompleteEdit"}),(0,r.kt)("h2",{id:"read-only"},"Read only"),(0,r.kt)(g,{mdxType:"CellAutocompleteView"}),(0,r.kt)(g,{columnProps:{multiple:!0},mdxType:"CellAutocompleteView"}),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"canCreate")),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", a ",(0,r.kt)("strong",{parentName:"td"},'Create "..."')," option appears when no option matches the current value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disableClearable")),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the input can't be cleared.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"multiple")),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the user can select multiple values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onCreate")),(0,r.kt)("td",{parentName:"tr",align:null},"func"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Callback fired when a new option is created with ",(0,r.kt)("inlineCode",{parentName:"td"},"canCreate")," set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),". It receives three arguments: the new value, the current row data and a callback to update the whole row data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"optionList")),(0,r.kt)("td",{parentName:"tr",align:null},"func ","|"," array"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Deprecated"),". Use the ",(0,r.kt)("inlineCode",{parentName:"td"},"options")," prop.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:null},"func ","|"," array"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Function called or array used to populate the suggestions list.")))))}y.isMDXComponent=!0}}]);