"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6386],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},36517:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return c},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return s}});var r=n(83117),o=(n(27378),n(3905));const a={sidebar_position:4,title:"Sort"},i=void 0,l={unversionedId:"virtual-table/sort",id:"virtual-table/sort",title:"Sort",description:"By default only the Amount, Number Select and String columns are sortable.",source:"@site/docs/virtual-table/sort.mdx",sourceDirName:"virtual-table",slug:"/virtual-table/sort",permalink:"/design-system/docs/virtual-table/sort",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/virtual-table/sort.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Sort"},sidebar:"tutorialSidebar",previous:{title:"Mode (to do)",permalink:"/design-system/docs/virtual-table/mode"},next:{title:"Filter",permalink:"/design-system/docs/virtual-table/filter"}},u={},s=[{value:"Unsupported column types",id:"unsupported-column-types",level:3},{value:"Custom sorting",id:"custom-sorting",level:2}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"By default only the ",(0,o.kt)("inlineCode",{parentName:"p"},"Amount"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Number")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Select")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"String")," columns are sortable."),(0,o.kt)("p",null,"You need to specify the ",(0,o.kt)("inlineCode",{parentName:"p"},"sortOrder")," for each options of your ",(0,o.kt)("inlineCode",{parentName:"p"},"Select")," column to make it works. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  typeCell: 'select',\n  options: [\n    {\n      value: 'one',\n      label: 'First',\n      sortOrder: 1,\n    }, {\n      value: 'three',\n      label: 'Third',\n      sortOrder: 3,\n    }, {\n      value: 'two',\n      label: 'Second',\n      sortOrder: 2\n    }\n  ]\n}\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"sortOrder")," only affect the sorting. The menu items order keeps following the order of the ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," property.")),(0,o.kt)("h3",{id:"unsupported-column-types"},"Unsupported column types"),(0,o.kt)("p",null,"You can activate the sorting on others column types by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"sortable")," property to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),". We recommend using a custom sorting function for those columns as the default result will be unpredictable."),(0,o.kt)("h2",{id:"custom-sorting"},"Custom sorting"),(0,o.kt)("p",null,"You can use your own sorting algorithm for any type of column with the ",(0,o.kt)("inlineCode",{parentName:"p"},"sortComparator")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const badgeValue = (badge) => {\n  switch (badge) {\n    case 'ok':\n      return 1;\n    case 'in-progress':\n      return 2;\n    default:\n      return -1\n  }\n};\n\nconst config = {\n  columns: [\n    {\n      typeCell: 'badge_status',\n      sortable: true,\n      sortComparator: (a, b) => badgeValue(a) - badgeValue(b)\n    },\n    ...\n  ],\n  ...\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"interface sortComparator {\n  (a, b, rowA:Row, rowB:Row): number\n}\n")))}c.isMDXComponent=!0}}]);